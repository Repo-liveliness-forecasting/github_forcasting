naive(issues.ts)
plot(issues.ts, col='blue')
lines(commits.ts, col='green')
train.commits.d1 <- diff(train.commits.ts, lag = 1)
train.commits.d1.d7 <- diff(train.commits.d1, lag = 7)
plot(train.issues.d1.d7, col='blue')
lines(lag(train.commits.d1.d7,2), col='green')
issues.14.ts <- window(issues.ts, start = 1, end = 14)
Acf(issues.14.ts, lag.max = 14, main = "")
plot(issues.ts, col='blue')
lines(commits.ts, col='green')
train.commits.d1 <- diff(train.commits.ts, lag = 1)
train.commits.d1.d7 <- diff(train.commits.d1, lag = 7)
plot(train.issues.d1.d7, col='blue')
lines(lag(train.commits.d1.d7,2), col='green')
issues.14.ts <- window(issues.ts, start = 1, end = 14)
Acf(issues.14.ts, lag.max = 14, main = "")
plot(issues.ts, col='blue')
lines(commits.ts, col='green')
issues.14.ts <- window(issues.ts, start = 1, end = 14)
Acf(issues.14.ts, lag.max = 14, main = "")
train.commits.d1 <- diff(train.commits.ts, lag = 1)
train.commits.d1.d7 <- diff(train.commits.d1, lag = 7)
plot(train.issues.d1.d7, col='blue')
lines(lag(train.commits.d1.d7,2), col='green')
train.issues.hw.pred <- hw(train.issues.ts, hw = "ZAA", h = n.valid)
kable(accuracy(train.issues.hw.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.hw.pred$mean)
plot(valid.issues.ts - train.issues.hw.pred$mean)
plot(train.issues.hw.pred)
lines(valid.issues.ts)
# Chunk 1
#install.packages('forecast')
library('forecast')
library(knitr)
#load the data frame
issues.csv <- read.csv("issues/tensorflow_tensorflow.csv")
commits.csv <- read.csv("commits/tensorflow_tensorflow.csv")
issues.csv$date = as.POSIXlt(as.Date(issues.csv$date,format='%m/%d/%Y'))
commits.csv$date = as.POSIXlt(as.Date(commits.csv$date,format='%m/%d/%Y'))
# Chunk 2
to_date <- issues.csv$date[length(issues.csv$date)]
from_date <- to_date
from_date$year <- from_date$year - 1
issues.csv <- subset(issues.csv, date <= to_date & date >= from_date)
commits.csv <- subset(commits.csv, date <= to_date & date >= from_date)
# Chunk 3
#loading issues and commits into a ts object
issues.ts <- ts(issues.csv$number_of_issues, frequency = 7)
commits.ts <- ts(commits.csv$number_of_commits, frequency = 7)
plot(issues.ts, main = 'Issues', bty = 'l', ylab = 'Number of Issues')
plot(commits.ts, main = 'Commits', bty = 'l', ylab = 'Number of Commits')
# Chunk 4
time <- time(issues.ts)
n.valid <- 21
n.train <- length(issues.ts) - n.valid
train.issues.ts <- window(issues.ts, start=time[1], end=time[n.train])
valid.issues.ts <- window(issues.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
train.commits.ts <- window(commits.ts, start=time[1], end=time[n.train])
valid.commits.ts <- window(commits.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
# Chunk 5: kable
train.issues.naive.pred <- naive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.naive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.naive.pred$mean)
plot(valid.issues.ts - train.issues.naive.pred$mean)
plot(train.issues.naive.pred)
lines(valid.issues.ts)
# Chunk 6
train.issues.snaive.pred <- snaive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.snaive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.snaive.pred$mean)
plot(valid.issues.ts - train.issues.snaive.pred$mean)
plot(train.issues.snaive.pred)
lines(valid.issues.ts)
# Chunk 1
#install.packages('forecast')
library('forecast')
library(knitr)
#load the data frame
issues.csv <- read.csv("issues/tensorflow_tensorflow.csv")
commits.csv <- read.csv("commits/tensorflow_tensorflow.csv")
issues.csv$date = as.POSIXlt(as.Date(issues.csv$date,format='%m/%d/%Y'))
commits.csv$date = as.POSIXlt(as.Date(commits.csv$date,format='%m/%d/%Y'))
# Chunk 2
to_date <- issues.csv$date[length(issues.csv$date)]
from_date <- to_date
from_date$year <- from_date$year - 1
issues.csv <- subset(issues.csv, date <= to_date & date >= from_date)
commits.csv <- subset(commits.csv, date <= to_date & date >= from_date)
# Chunk 3
#loading issues and commits into a ts object
issues.ts <- ts(issues.csv$number_of_issues, frequency = 7)
commits.ts <- ts(commits.csv$number_of_commits, frequency = 7)
plot(issues.ts, main = 'Issues', bty = 'l', ylab = 'Number of Issues')
plot(commits.ts, main = 'Commits', bty = 'l', ylab = 'Number of Commits')
# Chunk 4
time <- time(issues.ts)
n.valid <- 21
n.train <- length(issues.ts) - n.valid
train.issues.ts <- window(issues.ts, start=time[1], end=time[n.train])
valid.issues.ts <- window(issues.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
train.commits.ts <- window(commits.ts, start=time[1], end=time[n.train])
valid.commits.ts <- window(commits.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
# Chunk 5: kable
train.issues.naive.pred <- naive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.naive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.naive.pred$mean)
plot(valid.issues.ts - train.issues.naive.pred$mean)
plot(train.issues.naive.pred)
lines(valid.issues.ts)
# Chunk 6
train.issues.snaive.pred <- snaive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.snaive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.snaive.pred$mean)
plot(valid.issues.ts - train.issues.snaive.pred$mean)
plot(train.issues.snaive.pred)
lines(valid.issues.ts)
# Chunk 1
#install.packages('forecast')
library('forecast')
library(knitr)
#load the data frame
issues.csv <- read.csv("issues/tensorflow_tensorflow.csv")
commits.csv <- read.csv("commits/tensorflow_tensorflow.csv")
issues.csv$date = as.POSIXlt(as.Date(issues.csv$date,format='%m/%d/%Y'))
commits.csv$date = as.POSIXlt(as.Date(commits.csv$date,format='%m/%d/%Y'))
# Chunk 2
to_date <- issues.csv$date[length(issues.csv$date)]
from_date <- to_date
from_date$year <- from_date$year - 1
issues.csv <- subset(issues.csv, date <= to_date & date >= from_date)
commits.csv <- subset(commits.csv, date <= to_date & date >= from_date)
# Chunk 3
#loading issues and commits into a ts object
issues.ts <- ts(issues.csv$number_of_issues, frequency = 7)
commits.ts <- ts(commits.csv$number_of_commits, frequency = 7)
plot(issues.ts, main = 'Issues', bty = 'l', ylab = 'Number of Issues')
plot(commits.ts, main = 'Commits', bty = 'l', ylab = 'Number of Commits')
# Chunk 4
time <- time(issues.ts)
n.valid <- 21
n.train <- length(issues.ts) - n.valid
train.issues.ts <- window(issues.ts, start=time[1], end=time[n.train])
valid.issues.ts <- window(issues.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
train.commits.ts <- window(commits.ts, start=time[1], end=time[n.train])
valid.commits.ts <- window(commits.ts,
start=time[n.train+1],
end=time[n.train+n.valid])
# Chunk 5: kable
train.issues.naive.pred <- naive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.naive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.naive.pred$mean)
plot(valid.issues.ts - train.issues.naive.pred$mean)
plot(train.issues.naive.pred)
lines(valid.issues.ts)
# Chunk 6
train.issues.snaive.pred <- snaive(train.issues.ts, h=n.valid)
kable(accuracy(train.issues.snaive.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.snaive.pred$mean)
plot(valid.issues.ts - train.issues.snaive.pred$mean)
plot(train.issues.snaive.pred)
lines(valid.issues.ts)
# Chunk 7
train.issues.hw.pred <- hw(train.issues.ts, hw = "ZAA", h = n.valid)
kable(accuracy(train.issues.hw.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.hw.pred$mean)
plot(valid.issues.ts - train.issues.hw.pred$mean)
plot(train.issues.hw.pred)
lines(valid.issues.ts)
# Chunk 8
train.issues.d1 <- diff(train.issues.ts, lag = 1)
train.issues.d1.d7 <- diff(train.issues.d1, lag = 7)
ma.trailing <- rollmean(train.issues.d1.d7, k = 7, align = "right")
last.ma <- tail(ma.trailing, 1)
ma.trailing.pred <- ts(c(train.issues.d1.d7[1:6], ma.trailing, rep(last.ma, n.valid)), start=c(2,2), frequency = 7)
ma.dd.pred.d1 <- diffinv(ma.trailing.pred, lag = 7, xi=train.issues.d1[1:7])
ma.dd.pred <- diffinv(ma.dd.pred.d1, lag = 1, xi=train.issues.ts[1])
kable(accuracy(ma.dd.pred[(n.train+1):(n.train+n.valid)], valid.issues.ts))
hist(valid.issues.ts - ma.dd.pred[(n.train+1):(n.train+n.valid)])
plot(valid.issues.ts - ma.dd.pred[(n.train+1):(n.train+n.valid)])
plot(ma.dd.pred,col='red')
lines(issues.ts,col='blue')
# Chunk 9
train.issues.linear.regr.add.m <- tslm(train.issues.ts ~ trend + season)
train.issues.linear.regr.add.m
train.issues.linear.regr.add.pred <- forecast(train.issues.linear.regr.add.m , h=n.valid)
kable(accuracy(train.issues.linear.regr.add.pred, valid.issues.ts))
hist(valid.issues.ts - train.issues.linear.regr.add.pred$mean)
plot(valid.issues.ts - train.issues.linear.regr.add.pred$mean)
plot(train.issues.linear.regr.add.pred)
lines(valid.issues.ts)
