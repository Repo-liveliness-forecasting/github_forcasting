setwd("F:/IMBA/3rd semester/2b-business analytics using forecasting/final_project/new/github_forcasting")
library(forecast)
library(knitr)
issues.csv = read.csv('issues/apache_spark.csv')
issues.csv$date = as.POSIXlt(as.Date(issues.csv$date,format='%m/%d/%Y'))
to_date <- issues.csv$date[length(issues.csv$date)]
from_date <- to_date
from_date$year <- from_date$year - 1
issues.csv <- subset(issues.csv, date <= to_date & date >= from_date)
str(issues.csv)
issues.ts <- ts(issues.csv$number_of_issues, frequency = 7)
time <- time(issues.ts)
n.valid <- 21
n.train <- length(issues.ts) - n.valid
train.issues.ts <- window(issues.ts, start=time[1], end=time[n.train])
valid.issues.ts <- window(issues.ts, start=time[n.train+1], end=time[n.train+n.valid])
plot(train.issues.ts, main = 'Apache Spark', bty = 'l', ylab = 'Number of Issues', xlab = 'Week',
xlim = c(0, 54))
lines(valid.issues.ts, lwd = 2, col = 'blue')
diff7 = diff(issues.ts, lag = 7)
nValid.ma = 21
nTrain.ma = length(diff7) - nValid.ma
time.diff = time(diff7)
train.ts.ma = window(diff7, start = time.diff[1], end = time.diff[nTrain.ma])
valid.ts.ma = window(diff7, start = time.diff[nTrain.ma + 1],
end = time.diff[nTrain.ma + nValid.ma])
plot(diff7, ylab = 'Lag-7', main = 'Deseasonalized series (Spark)', bty = 'l')
library(zoo)
ma.trailing = rollmean(train.ts.ma, k = 7, align = 'right')
undiff = rep(0, length(ma.trailing))
for(j in 1:length(ma.trailing)){
undiff[j] = ma.trailing[j] + issues.ts[j + 6]
}
undiff.ts = ts(undiff, start = time.diff[1], freq = 7)
plot(issues.ts, main = 'Spark (Moving Average)', bty = 'l', ylab = 'Number of Issues')
lines(undiff.ts, lwd = 2, col = 'blue')
library(forecast)
library(knitr)
issues.csv = read.csv('issues/apache_spark.csv')
issues.csv$date = as.POSIXlt(as.Date(issues.csv$date,format='%m/%d/%Y'))
to_date <- issues.csv$date[length(issues.csv$date)]
from_date <- to_date
from_date$year <- from_date$year - 1
issues.csv <- subset(issues.csv, date <= to_date & date >= from_date)
str(issues.csv)
issues.ts <- ts(issues.csv$number_of_issues, frequency = 7)
time <- time(issues.ts)
n.valid <- 21
n.train <- length(issues.ts) - n.valid
train.issues.ts <- window(issues.ts, start=time[1], end=time[n.train])
valid.issues.ts <- window(issues.ts, start=time[n.train+1], end=time[n.train+n.valid])
plot(train.issues.ts, main = 'Apache Spark', bty = 'l', ylab = 'Number of Issues', xlab = 'Week',
xlim = c(0, 54))
lines(valid.issues.ts, lwd = 2, col = 'blue')
diff.ts = diff(issues.ts, lag = 1)
Acf(diff.ts, lag.max = 7, main = 'Acf on lag-1 difference')
train.issues.naive.pred <- naive(train.issues.ts, h = n.valid, level = 0)
plot(train.issues.naive.pred, main = 'Spark (Naive Forecast)', bty = 'l',
ylab = 'Number of Issues')
lines(train.issues.naive.pred$fitted, lwd = 2, col = 'blue')
lines(valid.issues.ts)
plot(train.issues.naive.pred, main = 'Spark (Naive Forecast)', bty = 'l',
ylab = 'Number of Issues')
lines(train.issues.naive.pred$fitted, lwd = 2, col = 'blue')
lines(valid.issues.ts)
plot(train.issues.ts - train.issues.naive.pred$fitted, main = 'Naive Forecast Errors Plot',
bty = 'l', xlab = 'Week', ylab = 'Errors', xlim = c(0, 54))
lines(valid.issues.ts - train.issues.naive.pred$mean, lwd = 2, col = 'blue')
kable(accuracy(train.issues.naive.pred, valid.issues.ts))
diff7 = diff(issues.ts, lag = 7)
nValid.ma = 21
nTrain.ma = length(diff7) - nValid.ma
time.diff = time(diff7)
train.ts.ma = window(diff7, start = time.diff[1], end = time.diff[nTrain.ma])
valid.ts.ma = window(diff7, start = time.diff[nTrain.ma + 1],
end = time.diff[nTrain.ma + nValid.ma])
plot(diff7, ylab = 'Lag-7', main = 'Deseasonalized series (Spark)', bty = 'l')
library(zoo)
ma.trailing = rollmean(train.ts.ma, k = 7, align = 'right')
undiff = rep(0, length(ma.trailing))
for(j in 1:length(ma.trailing)){
undiff[j] = ma.trailing[j] + issues.ts[j + 6]
}
undiff.ts = ts(undiff, start = time.diff[1], freq = 7)
plot(issues.ts, main = 'Spark (Moving Average)', bty = 'l', ylab = 'Number of Issues')
lines(undiff.ts, lwd = 2, col = 'blue')
for(j in 1:length(ma.trailing)){
undiff[j] = ma.trailing[j] + issues.ts[j + 7]
}
undiff.ts = ts(undiff, start = time.diff[1], freq = 7)
plot(issues.ts, main = 'Spark (Moving Average)', bty = 'l', ylab = 'Number of Issues')
lines(undiff.ts, lwd = 2, col = 'blue')
last.ma = tail(undiff.ts, 1)
undiff.ts.pred = ts(rep(last.ma, 21), start = time.diff[nTrain.ma + 1], freq = 7)
lines(undiff.ts.pred, lwd = 2, lty = 2, col = 'orange')
plot(issues.ts, main = 'Spark (Moving Average)', bty = 'l', ylab = 'Number of Issues')
lines(undiff.ts, lwd = 2, col = 'blue')
last.ma = tail(undiff.ts, 1)
undiff.ts.pred = ts(rep(last.ma, 21), start = time.diff[nTrain.ma + 1], freq = 7)
lines(undiff.ts.pred, lwd = 2, lty = 2, col = 'orange')
xTrain = data.frame(isCommit = issues.csv$is_commit[1:n.train])
xTest = data.frame(isCommit = issues.csv$is_commit[(n.train + 1):(n.train + n.valid)])
stlm.reg.fit = stlm(train.issues.ts, s.window = 'periodic', xreg = xTrain, method = 'arima')
stlm.reg.fit$model
stlm.reg.pred = forecast(stlm.reg.fit, xreg = xTest, h = n.valid, level = 0)
plot(stlm.reg.pred, ylab = 'Number of Issues', xlab = 'Week', bty = 'l')
lines(stlm.reg.pred$fitted, col = 'blue', lwd = 2)
lines(valid.issues.ts)
plot(train.issues.ts - stlm.reg.pred$fitted, main = 'External Info Errors Plot', bty = 'l',
ylab = 'Errors', xlab = 'Week', xlim = c(0, 54))
lines(valid.issues.ts - stlm.reg.pred$mean, col = 'blue', lwd = 2)
kable(accuracy(stlm.reg.pred, valid.issues.ts))
